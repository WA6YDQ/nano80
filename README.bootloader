   I've written a simple boot loader for the nano80 that is part 
of the nano80 code but is written in intel 8080 assembler.
Look for the routine called bootcode in the arduino source. That 
is where the object code is loaded to high memory. The actual 8080
source code is in bl.asm.


The bootloader will test the serial port until bytes are available.
When bytes start coming in, it will store the first 2 bytes into register BC.
This is the length in bytes of the program to load into memory. The bootloader
will use this count to know when to stop loading.

The bootloader assumes that the loaded program will start at address 0x0000.
The assembler assumes this as well as the output loads 00 preceeding the actual 
program (if the assembled program actually starts elsewhere).

   The next step is to create a bootloader-ready file from the .com file
created by the assembler asm80.

This is done with the program com2bl (included here).
com2bl (com to bootloader) reads the .com filesize and creates a file
with the filesize as the first 2 bytes, and the rest of the .com file attached 
after.

To build com2bl use the following:

cc -o com2bl com2bl.c

With a suitable 8080 assembler program run:

./com2bl file.com file.hex

The program file.hex will be the program to be loaded into memory by the bootloader
running on the nano80.

While nano80 machine is powered up, pressing and holding the Load button and
then pressing the reset button will change the running address to the bootloader.

Use a terminal program (I use minicom) send the file file.hex as an ascii upload.
The LED's on port 0 of the nano80 will flash as the file is loaded. When the file is
finished loading, the LED's will extinguish and the HALT led will light.

At this point, your program is loaded starting at 0x0000. Press the reset button and your
program will start running.

Here is an example:

write the 8080 source code and assemeble it:
asm80 file.asm

run com2bl to add the byte count:
./com2bl file.com file.hex

Start your comm package (I use minicom).

On the nano80 machine, press and hole the LOAD button,
press reset, release the load button. The nano80 will 
start the bootloader. 

Upload the file (ctrl-A S on minicom, then select file.hex to upload).
While uploading the led's on port 0 will flash.
When the upload is completed, the halt led on nano80 will light.

Press reset on the nano80. Your just loaded program will start running.

 